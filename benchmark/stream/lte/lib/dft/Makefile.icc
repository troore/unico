
include ../../../common/makefile.config

#SRC = dft.cpp test.cpp ../util.cpp
SRC = test.cpp ../util.cpp
SRC += $(LIB_DIR)/check/check.cpp $(LIB_DIR)/timer/meas.cpp

SRC_OMP = $(subst dft, dft_omp, $(SRC))

OBJS = $(patsubst %.cpp, %.o, $(SRC))
OBJS_OMP = $(patsubst %.cpp, %.o, $(SRC_OMP))

INC_DIRS = ./ ../ $(LIB_DIR)

ICPCFLAGS += $(INC_DIRS:%=-I%)

#LINKFLAGS += -L$(LIB_DIR)/dft/c -ldft

ifeq ($(VEC),1)
	ICPCFLAGS += -vec -vec-report2
#	ICPCFLAGS += -ftree-vectorize -msse2 -ffast-math -vec-report
else
	ICPCFLAGS += -no-vec
endif

ifeq ($(RAPL),1)
	INC_DIRS += $(LIB_DIR)/power
	LINKFLAGS += -L$(LIB_DIR)/power/papi-rapl -lraplpower
	ICPCFLAGS += -D_RAPL
endif


TARGETS = dft dft_omp

all: $(TARGETS) 

dft: $(OBJS) libdft.a
	$(ICPC) -o $@ $(OBJS) $(LINKFLAGS) -L$(LIB_DIR)/dft/c -ldft

libdft.a: dft.o
	ar rcs $@ $^

dft_omp: $(OBJS_OMP) libdftomp.a
	$(ICPC) -o $@ $(OBJS_OMP) $(LINKFLAGS) -openmp -L$(LIB_DIR)/dft/c -ldftomp

libdftomp.a: dft_omp.o
	ar rcs $@ $^

dft_omp.o: dft_omp.cpp
	$(ICPC) -o $@ -c $< $(ICPCFLAGS) -openmp

%.o: %.cpp
	$(ICPC) -o $@ -c $< $(ICPCFLAGS)


clean:
	rm -rf $(OBJS) $(OBJS_OMP) $(TARGETS) *.o *.a *.so
